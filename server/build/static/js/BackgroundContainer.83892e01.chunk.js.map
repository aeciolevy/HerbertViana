{"version":3,"sources":["components/styled/ContainerWithBackground.js","../node_modules/styled-media-query/dist/styled-media-query.es.js","components/styled/globalStyle.js","imgs/BG-8.png","imgs/bg-mobile-8.png"],"names":["ContainerWithBackground","styled","div","_templateObject","bg","_ref","height","siteMedia","lessThan","_templateObject2","bgMobile","__webpack_require__","d","__webpack_exports__","generateMedia","styled_components__WEBPACK_IMPORTED_MODULE_0__","_taggedTemplateLiteralLoose","_templateObject3","_templateObject4","_templateObject5","strings","raw","defaultBreakpoints","huge","large","medium","small","getSizeFromBreakpoint","breakpointValue","breakpoints","arguments","length","undefined","parseInt","console","error","oldStyle","Object","keys","reduce","acc","label","size","to","warn","apply","from","assign","breakpoint","greaterThan","between","firstBreakpoint","secondBreakpoint","index","styled_media_query__WEBPACK_IMPORTED_MODULE_0__","desktop","tablet","mobile","module","exports","p"],"mappings":"qfAKA,IAAMA,EAA0BC,IAAOC,IAAVC,IACDC,IAGb,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAH,OAAgBA,GAAkB,SAG3CC,IAAUC,SAAS,SAAnBD,CAPuBE,IAQGC,MAKjBV,6CClBfW,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,IAiDA,IAAAR,EAAAa,EAAA,2CAAoF,eAAmB,2CAA0C,gBAEjJP,EAAAO,EAAA,2CAAqF,eAAmB,2CAA0C,gBAElJC,EAAAD,EAAA,uEAAkH,eAAmB,uEAAuE,gBAE5ME,EAAAF,EAAA,uDAA2F,2BAA+B,uDAAsD,4BAEhLG,EAAAH,EAAA,uDAA2F,2BAA+B,uDAAsD,4BAEhL,SAAAA,EAAAI,EAAAC,GAEA,OADAD,EAAAC,MACAD,EAQA,IAAAE,EAAA,CACAC,KAAA,SACAC,MAAA,SACAC,OAAA,QACAC,MAAA,SAGA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAEA,OAAAD,EAAAD,GACAC,EAAAD,GACGK,SAAAL,GACHA,GAEAM,QAAAC,MAAA,wEACA,KAUA,SAAArB,IACA,IAAAe,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAR,EAoBAc,EAAAC,OAAAC,KAAAT,GAAAU,OAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAb,EAAAY,GAYA,OAVAD,EAAAG,GAAAF,GAAA,WAEA,OADAP,QAAAU,KAAA,2CAAAH,EAAA,8BAAAA,EAAA,kCACaJ,OAAAtB,EAAA,EAAAsB,CAAGnB,EAAAwB,EAAyB3B,EAAA,EAAG8B,WAAAb,EAAAF,aAG5CU,EAAAM,KAAAL,GAAA,WAEA,OADAP,QAAAU,KAAA,8CAAAH,EAAA,gCAAAA,EAAA,kCACaJ,OAAAtB,EAAA,EAAAsB,CAAGlB,EAAAuB,EAAyB3B,EAAA,EAAG8B,WAAAb,EAAAF,aAG5CU,GACG,CACHG,GAAA,GACAG,KAAA,KAEA,OAAAT,OAAAU,OAAA,CACAvC,SArCA,SAAAwC,GACA,kBACA,OAAaX,OAAAtB,EAAA,EAAAsB,CAAGlC,EAAAwB,EAAAqB,EAAAnB,GAAkEd,EAAA,EAAG8B,WAAAb,EAAAF,cAoCrFmB,YAhCA,SAAAD,GACA,kBACA,OAAaX,OAAAtB,EAAA,EAAAsB,CAAG5B,EAAAkB,EAAAqB,EAAAnB,GAAmEd,EAAA,EAAG8B,WAAAb,EAAAF,cA+BtFoB,QA3BA,SAAAC,EAAAC,GACA,kBACA,OAAaf,OAAAtB,EAAA,EAAAsB,CAAGpB,EAAAU,EAAAwB,EAAAtB,GAAAF,EAAAyB,EAAAvB,GAA8Hd,EAAA,EAAG8B,WAAAb,EAAAF,eA0B9IM,GAQH,IAAAiB,EAAAvC,IAOeD,EAAA,qCCzJfF,EAAAC,EAAAC,EAAA,sBAAAN,IAAA,IAAA+C,EAAA3C,EAAA,IAEaJ,EAAYO,YAAc,CACnCyC,QAAS,OACTC,OAAQ,OACRC,OAAQ,+BCLZC,EAAAC,QAAiBhD,EAAAiD,EAAuB,qDCAxCF,EAAAC,QAAiBhD,EAAAiD,EAAuB","file":"static/js/BackgroundContainer.83892e01.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { siteMedia } from './globalStyle';\nimport bg from '../../imgs/BG-8.png';\nimport bgMobile from '../../imgs/bg-mobile-8.png';\n\nconst ContainerWithBackground = styled.div`\n    background-image: url(${bg});\n    background-size: cover;\n    padding: 23px 16%;\n    height: ${ ({ height }) => height ? height : '58rem'};\n    flex: 1;\n\n    ${siteMedia.lessThan(\"mobile\")`\n        background-image: url(${bgMobile});\n        padding: 23px 5%;\n    `}\n`;\n\nexport default ContainerWithBackground;\n","import { css } from 'styled-components';\n/**\n * Converts breakpoint units in px to rem or em\n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1 rem in px. What is your main font-size in px? \n * @param {'rem' | 'em'} unit\n */\n\nfunction pxToEmOrRem(breakpoints) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  var unit = arguments[2];\n  var newBreakpoints = {};\n\n  for (var key in breakpoints) {\n    var point = breakpoints[key];\n\n    if (String(point).includes('px')) {\n      newBreakpoints[key] = +(parseInt(point) / ratio) + unit;\n      continue;\n    }\n\n    newBreakpoints[key] = point;\n  }\n\n  return newBreakpoints;\n}\n/**\n * Converts breakpoint units in px to em \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1em in px. What is your main font-size in px? \n */\n\n\nfunction pxToEm(breakpoints) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  return pxToEmOrRem(breakpoints, ratio, 'em');\n}\n/**\n * Converts breakpoint units in px to rem \n * @param {Object} breakpoints - an object containing breakpoint names as keys and the width as value\n * @param {number} [16] ratio - size of 1rem in px. What is your main font-size in px? \n */\n\n\nfunction pxToRem(breakpoints) {\n  var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  return pxToEmOrRem(breakpoints, ratio, 'rem');\n}\n\nvar _templateObject = _taggedTemplateLiteralLoose(['\\n    @media (max-width: ', ') {\\n      ', '\\n    }\\n  '], ['\\n    @media (max-width: ', ') {\\n      ', '\\n    }\\n  ']);\n\nvar _templateObject2 = _taggedTemplateLiteralLoose(['\\n    @media (min-width: ', ') {\\n      ', '\\n    }\\n  '], ['\\n    @media (min-width: ', ') {\\n      ', '\\n    }\\n  ']);\n\nvar _templateObject3 = _taggedTemplateLiteralLoose(['\\n    @media (min-width: ', ') and\\n      (max-width: ', ') {\\n      ', '\\n    }\\n  '], ['\\n    @media (min-width: ', ') and\\n      (max-width: ', ') {\\n      ', '\\n    }\\n  ']);\n\nvar _templateObject4 = _taggedTemplateLiteralLoose(['\\n          @media (max-width: ', ') {\\n            ', '\\n          }\\n        '], ['\\n          @media (max-width: ', ') {\\n            ', '\\n          }\\n        ']);\n\nvar _templateObject5 = _taggedTemplateLiteralLoose(['\\n          @media (min-width: ', ') {\\n            ', '\\n          }\\n        '], ['\\n          @media (min-width: ', ') {\\n            ', '\\n          }\\n        ']);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n/**\n * Default media breakpoints\n * @type {Object}\n */\n\n\nvar defaultBreakpoints = {\n  huge: '1440px',\n  large: '1170px',\n  medium: '768px',\n  small: '450px'\n};\n\nfunction getSizeFromBreakpoint(breakpointValue) {\n  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (breakpoints[breakpointValue]) {\n    return breakpoints[breakpointValue];\n  } else if (parseInt(breakpointValue)) {\n    return breakpointValue;\n  } else {\n    console.error('styled-media-query: No valid breakpoint or size specified for media.');\n    return '0';\n  }\n}\n/**\n * Media query generator\n * @param {Object} breakpoints - Map labels to breakpoint sizes\n * @return {Object} - Media generators for each breakpoint\n */\n\n\nfunction generateMedia() {\n  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBreakpoints;\n\n  var lessThan = function lessThan(breakpoint) {\n    return function () {\n      return css(_templateObject, getSizeFromBreakpoint(breakpoint, breakpoints), css.apply(undefined, arguments));\n    };\n  };\n\n  var greaterThan = function greaterThan(breakpoint) {\n    return function () {\n      return css(_templateObject2, getSizeFromBreakpoint(breakpoint, breakpoints), css.apply(undefined, arguments));\n    };\n  };\n\n  var between = function between(firstBreakpoint, secondBreakpoint) {\n    return function () {\n      return css(_templateObject3, getSizeFromBreakpoint(firstBreakpoint, breakpoints), getSizeFromBreakpoint(secondBreakpoint, breakpoints), css.apply(undefined, arguments));\n    };\n  };\n\n  var oldStyle = Object.keys(breakpoints).reduce(function (acc, label) {\n    var size = breakpoints[label];\n\n    acc.to[label] = function () {\n      console.warn('styled-media-query: Use media.lessThan(\\'' + label + '\\') instead of old media.to.' + label + ' (Probably we\\'ll deprecate it)');\n      return css(_templateObject4, size, css.apply(undefined, arguments));\n    };\n\n    acc.from[label] = function () {\n      console.warn('styled-media-query: Use media.greaterThan(\\'' + label + '\\') instead of old media.from.' + label + ' (Probably we\\'ll deprecate it)');\n      return css(_templateObject5, size, css.apply(undefined, arguments));\n    };\n\n    return acc;\n  }, {\n    to: {},\n    from: {}\n  });\n  return Object.assign({\n    lessThan: lessThan,\n    greaterThan: greaterThan,\n    between: between\n  }, oldStyle);\n}\n/**\n * Media object with default breakpoints\n * @return {object} - Media generators for each size\n */\n\n\nvar index = generateMedia();\n/**\n * Usage: styled.div` ${media.from.medium`background: #000;`} `;\n * With this code, background for small and medium sizes will be `default` and for more than medium, will be `#000`\n */\n\nexport { pxToEm, pxToRem, defaultBreakpoints, generateMedia };\nexport default index;","import { generateMedia } from 'styled-media-query';\n\nexport const siteMedia = generateMedia({\n    desktop: '64em',\n    tablet: '48em',\n    mobile: '37.5em',\n});\n","module.exports = __webpack_public_path__ + \"static/media/BG-8.ea2ba8cd.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-mobile-8.3206f132.png\";"],"sourceRoot":""}